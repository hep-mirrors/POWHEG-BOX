#!/bin/sh

# ####################################################################
# To successfully employ this script, make sure that your bash is in #
# the bin - directory or adjust accordingly.                         #
######################################################################

RUNDIR=${PWD}
GOSAMDIR=${PWD}/GoSam_POWHEG
VIRDIR=$GOSAMDIR/Virtual


# --> checks for a safe generation <--
LIBPATHTEST=1    # LD_LIBRARY_PATH up to date
LIBGOLEMOLP=0    # libgole_olp.so exists
VIRTUALCODE=0    # Virtual code exists
ORDERFILELH=0    # order file exists
WRITEPWHGFL=0    # write_pwhg_file prog exists
VIRTCOMPLET=0

if [ "${LD_LIBRARY_PATH##*:}" != "$GOSAMDIR" ]
then
    LIBPATHTEST=0
fi
if [ -f $GOSAMDIR/libgolem_olp.so ]
then
    LIBGOLEMOLP=1
    if [ -L $GOSAMDIR/libgolem_olp.so ]
    then
	LIBGOLEMOLP=2
    fi
fi
if [ -f $GOSAMDIR/orderfile.lh ]
then
    ORDERFILELH=1
fi
if [ -e $VIRDIR/lib/libgolem_olp.so ]
then
    VIRTUALCODE=1
fi
if [ -x $GOSAMDIR/write_pwhg_files ]
then
    WRITEPWHGFL=1
fi
# --> checks for a safe generation : end <--

## POSSIBLE DIFFERENT INPUT COMMANDS 

# If input is 'HELP':
if [ "$1" = "help" ]
then
    echo "*******************************************************************************************"
    echo "-- HELP menu for the script buildvirt --                                                    "
    echo "Possible running options:                                                                  "
    echo "./BuildVirt libgolem      : makes a dummy libgolem_olp.so library                           "
    echo "./BuildVirt orderfile     : makes 'orderfile.lh' to be passed to GoSam,                     "
    echo "./BuildVirt genvirt       : generates the code for the virtual part without compiling it,   "
    echo "./BuildVirt virtual       : makes full virtual code,                                        "
    echo "./BuildVirt newfiles      : creates the new files needed to run the virtual amplitude,      "
    echo "./BuildVirt all           : make everything needed for the virtual amplitude,               "
    echo "./BuildVirt cleanvirt     : removes the created virtual code,                               "
    echo "./BuildVirt cleannewfiles : removes the files created to run the virtual amplitude          "
    echo "./BuildVirt veryclean     : restores initial conditions,                                    "
    echo "./BuildVirt help          : shows this menu.                                                "
    echo "*******************************************************************************************"
    exit
fi

# If input is 'CLEANVIRT':
if [ "$1" = "cleanvirt" ]
then
    echo "This will delete the files for the virtual amplitude."
    echo "Are you sure you want to proceed? (Yes/No)"
    read ANS
    if [ "$ANS" = "Yes" ]
    then
	echo "---> Cleaning virtual part ..."
	cd $GOSAMDIR
	rm -f gosam.crashed
	rm -fr Virtual
	rm -fr orderfile.olc
	rm -f libgolem_olp.so
	
	echo "---> Recreating dummy libgolem_olp.so ..."
	cd $GOSAMDIR
	gfortran -fPIC -DPIC -o golem_olp.o -c golem_olp.f
	gfortran -shared -o libgolem_olp.so golem_olp.o
	rm -f golem_olp.o    
	exit
    else
	echo "Aborted!"
    fi
fi

# If input is 'CLEANNEWFILES':
if [ "$1" = "cleannewfiles" ]
then
    if [ $WRITEPWHGFL = 1 ]
    then
	echo "---> Deleting new files and restoring initial setup..."
	cd $RUNDIR    
	if [ -e $RUNDIR/virtual.f.dummy ]
	then    
	    mv virtual.f.dummy virtual.f
	fi
	if [ -e $RUNDIR/init_couplings.f.old ]
	then    
	    mv init_couplings.f.old init_couplings.f
	fi
	if [ -e $RUNDIR/init_processes.f.old ]
	then    
	    mv init_processes.f.old init_processes.f
	fi
	cd $GOSAMDIR
	rm write_pwhg_files
	rm virtual_new.f
	rm init_couplings_new.f
	rm init_processes_new.f

	echo "*********************************************"
	echo "The files:                                   "
	echo "- virtual.f                                  "
	echo "- init_couplings.f                           "
	echo "- init_processes.f                           "
	echo "were replaced with their original versions.  "
	echo "*********************************************"
	exit
    else
	echo "*********************************************"
	echo "This command is not applicable to your setup."
	echo "*********************************************"
    fi
    
fi

# VERY CLEAN:
if [ "$1" = "veryclean" ]
then
    echo "This will delete ALL the files for the virtual amplitude."
    echo "Are you really sure you want to proceed? (Yes/No)"
    read ANS
    if [ "$ANS" = "Yes" ]
    then
	echo "---> Deleting all files and restoring initial conditions ..."
	cd $RUNDIR
	make clean
	if [ -e $RUNDIR/virtual.f.dummy ]
	then    
	    mv virtual.f.dummy virtual.f
	fi
	if [ -e $RUNDIR/init_couplings.f.old ]
	then    
	    mv init_couplings.f.old init_couplings.f
	fi
	if [ -e $RUNDIR/init_processes.f.old ]
	then    
	    mv init_processes.f.old init_processes.f
	fi

	cd $GOSAMDIR
	rm -fr Virtual
	rm -f gosam.crashed
	rm -f orderfile.*
	rm -f write_pwhg_files
	rm -f virtual_new.f
	rm -f init_couplings_new.f
	rm -f init_processes_new.f
	rm -f libgolem_olp.so
	echo "*********************************************"
	echo "All GoSam files have been deleted.           "
	echo "*********************************************"
	exit
    else
	echo "Aborted!"
    fi
fi

# LIB_GOLEM_OLP
if [ "$1" = "libgolem" ]
then
    if [ $LIBGOLEMOLP = 0 ]
    then
	echo "---> Creating dummy $GOSAMDIR/libgolem_olp.so ..."
	cd $GOSAMDIR
	gfortran -fPIC -DPIC -o golem_olp.o -c golem_olp.f
	gfortran -shared -o libgolem_olp.so golem_olp.o
	rm -f golem_olp.o
	exit
    else
	echo "*********************************************"
	echo "Dummy libgolem_olp.so already exists         "
	echo "*********************************************"
    fi
fi

# ORDERFILE
if [ "$1" = "orderfile" ]
then
    # call to gosam_flst_born in init_processes.f
    cd $RUNDIR
    if grep -q "gosam_flst_born" "$RUNDIR/init_processes.f"
    then
	# do nothing
	:
    else
	echo "*********************************************"
	echo "A call to gosam_flst_born is missing.        "
	echo "Please add a call to gosam_flst_born to the  "
	echo "file 'init_processes.f' with the proper      "
	echo "powers of alpha_s and alpha and then re-run  "
	echo "the script.                                  "
	echo "*********************************************"
	exit
    fi
    if [ $LIBGOLEMOLP = 0 ]
    then
	echo "---> Creating dummy $GOSAMDIR/libgolem_olp.so ..."
	cd $GOSAMDIR
	gfortran -fPIC -DPIC -o golem_olp.o -c golem_olp.f
	gfortran -shared -o libgolem_olp.so golem_olp.o
	rm -f golem_olp.o
	if [ -f $GOSAMDIR/libgolem_olp.so ]
	then
	    LIBGOLEMOLP=1
	fi	
    fi
    if [ $ORDERFILELH = 0 ]
    then
	echo "---> Creating order file ..."
	
	cd $RUNDIR
	export LD_LIBRARY_PATH=$GOSAMDIR:$LD_LIBRARY_PATH
	make 
	
	cd $GOSAMDIR
	$RUNDIR/pwhg_main
	exit
    else
	echo "*********************************************"
	echo "Orderfile already exists!                    "
	echo "*********************************************"
    fi
fi

# GENVIRT
if [ "$1" = "genvirt" ]
then
    
    if [ ! -e $VIRDIR/Makefile ] && [ $ORDERFILELH = 1 ]
    then
	if [ ! -e $GOSAMDIR/gosam.rc ]
	then
	    echo "*********************************************"
	    echo "No gosam.rc file was found.                  "
	    echo "Please prepare a gosam.rc file with the      "
	    echo "needed informations for this process.        "
	    echo "*********************************************"
	    exit
	fi
	echo "---> GoSam is writing the code for virtual part ..."
	cd $GOSAMDIR
	gosam.py --olp --mc=powhegbox --config=gosam.rc --ignore-unknown --force --destination=$VIRDIR orderfile.lh
	cp $GOSAMDIR/gosam.rc $VIRDIR
	
	cd $VIRDIR
	echo "---> Generating makefiles with autotools ..."
	bash autogen.sh --prefix=$VIRDIR
	exit
    elif [ $ORDERFILELH = 0 ]
    then
	echo "*********************************************"
	echo "You need to generate the orderfile first     "
	echo "*********************************************"
    elif [ -L $GOSAMDIR/libgolem_olp.so ]
    then
 	echo "*********************************************"
	echo "Virtual code already generated!              "
	echo "*********************************************"
    fi
fi

# VIRTUAL
if [ "$1" = "virtual" ]
then
    if [ ! -e $VIRDIR/Makefile ] && [ ! -e $VIRDIR/lib/libgolem_olp.so ] && [ $ORDERFILELH = 1 ]
    then
	if [ ! -e $GOSAMDIR/gosam.rc ]
	then
	    echo "*********************************************"
	    echo "No gosam.rc file was found.                  "
	    echo "Please prepare a gosam.rc file with the      "
	    echo "needed informations for this process.        "
	    echo "*********************************************"
	    exit
	fi
	echo "---> GoSam is writing the code for the virtual part ..."
	cd $GOSAMDIR
	gosam.py --olp --mc=powhegbox --config=gosam.rc --ignore-unknown --force --destination=$VIRDIR orderfile.lh
	cp $GOSAMDIR/gosam.rc $VIRDIR
	
	cd $VIRDIR
	echo "---> Generating makefiles with autotools ..."
	bash autogen.sh --prefix=$VIRDIR
    fi
    if [ -e $VIRDIR/Makefile ] && [ ! -e $VIRDIR/lib/libgolem_olp.so ] && [ $ORDERFILELH = 1 ]
    then
	echo "---> Generating code for amplitudes ..."
	cd $VIRDIR
	make
	make install 

	cd $GOSAMDIR
	if [ -e $VIRDIR/lib/libgolem_olp.so ]
	then
	    rm -f $GOSAMDIR/libgolem_olp.so
	    ln -s $VIRDIR/lib/libgolem_olp.so
	    VIRTUALCODE=1
	fi	
	exit
    elif [ $ORDERFILELH = 0 ]
    then
	echo "*********************************************"
	echo "You need to generate the orderfile first     "
	echo "*********************************************"
    elif [ -L $GOSAMDIR/libgolem_olp.so ]
    then
	echo "*********************************************"
	echo "Virtual code already generated               "
	echo "*********************************************"
    fi
    if [ $LIBPATHTEST = 0 ]
    then
	echo "*********************************************"
	echo " Please add the gosam library path to        "
	echo " LD_LIBRARY_PATHby executing the following:  "
	echo "                                             "
	echo 'export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:'$GOSAMDIR
	echo "*********************************************"
    fi
fi


# NEWFILES
if [ "$1" = "newfiles" ]
then
    if [ ! -L $GOSAMDIR/libgolem_olp.so ]
    then
	echo "*********************************************"
	echo "Virtual code is not ready yet                "
	echo "Please generate it first with the command    "
	echo "./buildvirt virtual                           "
	echo "*********************************************"
	exit
    fi
    if [ $WRITEPWHGFL = 1 ]
    then
	echo "*********************************************"
	echo "It seems that you already created the new    "
	echo "files needed to run the POWHEG BOX with GoSam"
	echo "Please delete this files running first       "
	echo "./buildvirt cleannewfiles                     "
	echo "*********************************************"
	exit
    fi    
    if [ $ORDERFILELH = 1 ] &&  [ $VIRTUALCODE = 1 ] &&  [ $WRITEPWHGFL = 0 ]
    then
	echo "---> Generating new files to run the virtual amplitude ..."
	
	cd $GOSAMDIR
	gfortran -o write_pwhg_files write_pwhg_files.f
	./write_pwhg_files
	
	cd $RUNDIR
	mv $RUNDIR/virtual.f $RUNDIR/virtual.f.dummy
	mv $RUNDIR/init_couplings.f $RUNDIR/init_couplings.f.old
	mv $RUNDIR/init_processes.f $RUNDIR/init_processes.f.old
	cp $GOSAMDIR/virtual_new.f $RUNDIR/virtual.f
	cp $GOSAMDIR/init_couplings_new.f $RUNDIR/init_couplings.f
	cp $GOSAMDIR/init_processes_new.f $RUNDIR/init_processes.f
	
	echo "*********************************************"
	echo "The new files:                               "
	echo "- virtual.f                                  "
	echo "- init_couplings.f                           "
	echo "- init_processes.f                           "
	echo "were created. The old files were renamed to: "
	echo "- virtual.f.dummy                            "
	echo "- init_couplings.f.old                       "
	echo "- init_processes.f.old                       "
	echo "                                             "
	echo "Please recompile the POWHEG-BOX.             "
	echo "*********************************************"
	if [ $LIBPATHTEST = 0 ]
	then
	    echo "*********************************************"
	    echo " Please add the gosam library path to        "
	    echo " LD_LIBRARY_PATHby executing the following:  "
	    echo "                                             "
	    echo 'export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:'$GOSAMDIR
	    echo "*********************************************"
	fi
	exit
    else
	echo "*********************************************"
	echo "Something is strange in your setup. Please   "
	echo "try to run './buildvirt cleannewfile' first   "
	echo "and then try again.                          "
	echo "*********************************************"
	exit
    fi
fi



# ALL
if [ "$1" = "all" ]
then
    while [ $VIRTCOMPLET = 0 ]
    do
	if [ $ORDERFILELH = 0 ] &&  [ $VIRTUALCODE = 0 ] &&  [ $WRITEPWHGFL = 1 ]
	then
	    echo "*********************************************"
	    echo "Something is odd, you should regenerate your " 
	    echo " code from scratch with                      "
	    echo "./buildvirt veryclean  and  ./buildvirt all    "
	    echo "*********************************************"
	    exit	    
	elif [ $ORDERFILELH = 1 ] &&  [ $VIRTUALCODE = 0 ] &&  [ $WRITEPWHGFL = 1 ]
	then
	    echo "*********************************************"
	    echo "Something is odd, you should regenerate your " 
	    echo " code from scratch with                      "
	    echo "./buildvirt veryclean  and  ./buildvirt all    "
	    echo "*********************************************"
	    exit
	elif [ $ORDERFILELH = 0 ] && [ $LIBGOLEMOLP = 0 ]
	then
	    echo "---> Creating dummy libgolem_olp.so ..."
	    cd $GOSAMDIR
	    gfortran -fPIC -DPIC -o golem_olp.o -c golem_olp.f
	    gfortran -shared -o libgolem_olp.so golem_olp.o
	    rm -f golem_olp.o
	    if [ -f $GOSAMDIR/libgolem_olp.so ]
	    then
		LIBGOLEMOLP=1
	    fi
	    
	elif [ $ORDERFILELH = 0 ] && [ $LIBGOLEMOLP = 1 ]
	then
	    
	    if grep -q gosam_flst_born init_processes.f
	    then
		# do nothing
		:
	    else
		echo "*********************************************"
		echo "A call to gosam_flst_born is missing.        "
		echo "Please add a call to gosam_flst_born to the  "
		echo "file 'init_processes.f' with the proper      "
		echo "powers of alpha_s and alpha and then re-run  "
		echo "the script.                                  "
		echo "*********************************************"
		exit
	    fi
	    
	    echo "---> Creating order file ..."
	    
	    cd $RUNDIR
	    export LD_LIBRARY_PATH=$GOSAMDIR:$LD_LIBRARY_PATH
	    make 
	    
	    cd $GOSAMDIR
	    $RUNDIR/pwhg_main
	    
	    if [ -f $GOSAMDIR/orderfile.lh ]
	    then
		ORDERFILELH=1
	    fi
	    
	elif [ $ORDERFILELH = 1 ] && [ $VIRTUALCODE = 0 ]
	then    	    
	    if [ ! -e $VIRDIR/Makefile ]
	    then
		if [ ! -e $GOSAMDIR/gosam.rc ]
		then
		    echo "*********************************************"
		    echo "No gosam.rc file was found.                  "
		    echo "Please prepare a gosam.rc file with the      "
		    echo "needed informations for this process.        "
		    echo "*********************************************"
		    exit
		fi
		echo "---> Creating code for virtual part ..."
		cd $GOSAMDIR
		gosam.py --olp --mc=powhegbox --config=gosam.rc --ignore-unknown --force --destination=$VIRDIR orderfile.lh
		cp $GOSAMDIR/gosam.rc $VIRDIR
		
		cd $VIRDIR
		echo "---> Generating makefiles with autotools ..."
		bash autogen.sh --prefix=$VIRDIR
	    fi
	  
	    echo "---> Generating code for amplitudes ..."
	    cd  $VIRDIR
	    make
	    make install 
	    
	    cd $GOSAMDIR
	    if [ -e $VIRDIR/lib/libgolem_olp.so ]
	    then
		rm -f $GOSAMDIR/libgolem_olp.so
		ln -s $VIRDIR/lib/libgolem_olp.so
		VIRTUALCODE=1
	    fi
	    if [ -L $GOSAMDIR/libgolem_olp.so ]
	    then
		LIBGOLEMOLP=2
	    fi
	    
	elif [ $ORDERFILELH = 1 ] &&  [ $VIRTUALCODE = 1 ] &&  [ $WRITEPWHGFL = 0 ]
	then
	    
	    echo "---> Generating new files to run the virtual amplitude ..."
	    
	    cd $GOSAMDIR
	    gfortran -o write_pwhg_files write_pwhg_files.f
	    ./write_pwhg_files
	    
	    cd $RUNDIR
	    mv $RUNDIR/virtual.f $RUNDIR/virtual.f.dummy
	    mv $RUNDIR/init_couplings.f $RUNDIR/init_couplings.f.old
	    mv $RUNDIR/init_processes.f $RUNDIR/init_processes.f.old
	    cp $GOSAMDIR/virtual_new.f $RUNDIR/virtual.f
	    cp $GOSAMDIR/init_couplings_new.f $RUNDIR/init_couplings.f
	    cp $GOSAMDIR/init_processes_new.f $RUNDIR/init_processes.f
	    echo "*********************************************"
	    echo "The new files:                               "
	    echo "- virtual.f                                  "
	    echo "- init_couplings.f                           "
	    echo "- init_processes.f                           "
	    echo "were created. The old files were renamed to: "
	    echo "- virtual.f.dummy                            "
	    echo "- init_couplings.f.old                       "
	    echo "- init_processes.f.old                       "
	    echo "                                             "
	    echo "Please recompile the POWHEG-BOX.             "
	    echo "*********************************************"
	    if [ -x $GOSAMDIR/write_pwhg_files ]
	    then
		WRITEPWHGFL=1
	    fi
	    
	elif [ $ORDERFILELH = 1 ] &&  [ $VIRTUALCODE = 1 ] &&  [ $WRITEPWHGFL = 1 ] &&  [ $LIBGOLEMOLP = 2 ]
	then
	    echo "*********************************************"
	    echo " Virtual code is ready to be used: HAVE FUN! "
	    echo "*********************************************"
	    VIRTCOMPLET=1
	else
	    echo "*********************************************"
	    echo "Not able to detect status. Generation aborted"
	    echo "*********************************************"
	    exit
	fi
    done
    if [ $LIBPATHTEST = 0 ]
    then
	echo "*********************************************"
	echo " Please add the gosam library path to        "
	echo " LD_LIBRARY_PATH by executing the following: "
	echo "                                             "
	echo "export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:"$GOSAMDIR
	echo "*********************************************"
    fi    
else
    echo "*******************************************************************************************"
    echo "-- Wrong or no option was specified. Possible options are --                               "
    echo "Possible running options:                                                                  "
    echo "./BuildVirt libgolem      : makes a dummy libgolem_olp.so library                           "
    echo "./BuildVirt orderfile     : makes 'orderfile.lh' to be passed to GoSam,                     "
    echo "./BuildVirt genvirt       : generates the code for the virtual part without compiling it,   "
    echo "./BuildVirt virtual       : makes full virtual code,                                        "
    echo "./BuildVirt newfiles      : creates the new files needed to run the virtual amplitude,      "
    echo "./BuildVirt all           : make everything needed for the virtual amplitude,               "
    echo "./BuildVirt cleanvirt     : removes the created virtual code,                               "
    echo "./BuildVirt cleannewfiles : removes the files created to run the virtual amplitude          "
    echo "./BuildVirt veryclean     : restores initial conditions,                                    "
    echo "./BuildVirt help          : shows this menu.                                                "
    echo "*******************************************************************************************"
fi
